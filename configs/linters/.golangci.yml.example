# Example .golangci.yml configuration for golangci-lint
# --- RENAME this file to '.golangci.yml' in your project root ---

run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m
  # exit code when issues were found, default is 1
  issues-exit-code: 1
  # include test files or not, default is true
  tests: true
  # list of build tags, all linters use it. Default is empty list.
  # build-tags:
  #   - integration

linters-settings:
  govet:
    # report about shadowed variables
    check-shadowing: true
  gocyclo:
    # minimal code complexity to report, 30 is high (useful for finding very complex spots)
    min-complexity: 15
  maligned:
    # print struct layout optimization suggestions
    suggest-new: true
  goconst:
    # minimal length of string constant to report, default is 3
    min-len: 3
    # minimal occurrences count to report, default is 3
    min-occurrences: 3
  misspell:
    # Correct spellings using locale (GOOS=linux GOARCH=amd64 CGO_ENABLED=0...)
    locale: US
  funlen:
    # Checks function length. Set reasonable limits.
    lines: 80
    statements: 50
  gocritic:
    # Which checks to enable; can be very opinionated. Start small.
    enabled-tags:
      - diagnostic
      - style
      # - performance # Can be noisy
      # - experimental
    disabled-checks:
      - sloppyReassign # Example: disable a specific check if needed

linters:
  # Disable specific linters if needed, or enable only a subset
  # enable:
  #   - govet
  #   - errcheck
  #   - staticcheck
  #   - unused
  #   - gosimple
  #   - structcheck
  #   - varcheck
  #   - ineffassign
  #   - typecheck
  #   - gocyclo
  #   - gosec # Security Linter
  #   - gocritic
  #   - funlen
  #   - misspell
  disable-all: false # Runs most default linters unless specific ones are disabled below
  enable: # Explicitly enable gosec for security
     - gosec
  # Example: disable a linter if it's too noisy or conflicts
  # disable:
  #   - maligned

issues:
  # Maximum issues count from new code. Set to 0 to fail CI if new issues appear.
  max-issues-per-linter: 0
  max-same-issues: 0

  # Exclude specific issues by text or path pattern
  # exclude-rules:
  #   - path: _test\.go
  #     linters:
  #       - funlen # Allow longer functions in tests
  #   - text: "G104: Errors unhandled" # Example: Temporarily ignore unhandled errors

# output format: colored-line-number | line-number | json | tab | checkstyle | github-actions
# Use github-actions format in GitHub CI
output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

