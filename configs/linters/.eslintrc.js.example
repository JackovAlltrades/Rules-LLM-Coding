// Example ESLint Configuration
// --- RENAME this file to '.eslintrc.js' or place in package.json ---
module.exports = {
  env: {
    browser: true, // Or node: true, depending on your environment
    es2021: true,
  },
  extends: [
    'eslint:recommended', // Start with ESLint's recommended rules
    // 'plugin:react/recommended', // Add if using React
    // 'plugin:@typescript-eslint/recommended', // Add if using TypeScript
    // 'plugin:prettier/recommended', // Add if using Prettier (integrates Prettier errors into ESLint)
  ],
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    // Set if using React:
    // ecmaFeatures: {
    //   jsx: true,
    // },
  },
  // Add plugins if needed (e.g., for React, TypeScript, Prettier)
  // plugins: ['react', '@typescript-eslint', 'prettier'],
  rules: {
    // --- Customize rules here ---
    // Example: Enforce stricter equality
    'eqeqeq': ['error', 'always'],
    // Example: Discourage console.log in production code (use a proper logger)
    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    // Example: Require JSDoc comments for functions (adjust as needed)
    // 'require-jsdoc': ['warn', {
    //   require: {
    //       FunctionDeclaration: true,
    //       MethodDefinition: false,
    //       ClassDeclaration: false,
    //       ArrowFunctionExpression: false,
    //       FunctionExpression: false
    //   }
    // }],
    // Example: Prevent handling errors with just console.error (aligns with MLR 3.3.2)
    'no-restricted-syntax': [
      'error',
      {
        selector: 'CallExpression[callee.object.name="console"][callee.property.name="error"]',
        message: 'Avoid console.error directly in catch blocks. Use a proper logging framework or rethrow the error.',
      },
    ],
    // Add Prettier rules if using 'plugin:prettier/recommended'
    // 'prettier/prettier': 'error',
  },
  // If using React plugin:
  // settings: {
  //   react: {
  //     version: 'detect', // Automatically detect the React version
  //   },
  // },
};
